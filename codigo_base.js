  // Invocamos o leitor de qr code
const qrcode = require('qrcode-terminal');
const { Client, Buttons, List, MessageMedia } = require('whatsapp-web.js'); // Mudan√ßa Buttons
const client = new Client();
// entao habilitamos o usuario a acessar o servi√ßo de leitura do qr code
client.on('qr', qr => {
    qrcode.generate(qr, {small: true});
});
// apos isso ele diz que foi tudo certin
client.on('ready', () => {
    console.log('Tudo certo! WhatsApp conectado.');
});
// E inicializa tudo para fazer a nossa magica =)
client.initialize();

const delay = ms => new Promise(res => setTimeout(res, ms)); // Fun√ß√£o que usamos para criar o delay entre uma a√ß√£o e outra

// Funil Base Projeto

client.on('message', async msg => {

    if (msg.body === 'ATIVAR FUNIL BASICO') {
        const chat = await msg.getChat();
        chat.sendStateTyping(); // Simulando Digita√ß√£o
        await delay(3000); //Delay de 3000 milisegundos mais conhecido como 3 segundos
        msg.reply('Ol√°! Seja muito bem vindo. Voc√™ entrou no Funil Basico do treinamento Chatbot projetado pelo Johnny'); //Primeira mensagem de texto
        await delay(1000); //delay de 1 segundo
        client.sendMessage(msg.from, 'Voc√™ vai ter contato com as funcionalidades b√°sicas do nosso projeto e poder√° ver o quanto √© f√°cil criar seus pr√≥prios funis personalizados ao seu neg√≥cio.');
        await delay(3000); //delay de 3 segundos
        client.sendMessage(msg.from, 'Agora vamos testar os bot√µes. üòé');
        client.sendMessage(msg.from, new Buttons('Olha que bacana', [{id:'customId',body:'Bacana demais!!'},{body:'Eu concordo, mto mesmo..'}, {body:'Olha o terceiro botao'}], 'Vamos l√°...', 'Escolha abaixo üëá'));

    }
    
    if (msg.body !== null && msg.body === 'Bacana demais!!') {
        const chat = await msg.getChat();
        chat.sendStateTyping(); //Simulando digita√ß√£o
        await delay(3000); //Delay de 3 segundos
        client.sendMessage(msg.from, 'Voc√™ escolheu a op√ß√£o Bacana demais. Isso √© muito bom, pois na pr√°tica voc√™ vai se comunicar com seus clientes exatamente desta maneira.');
        await delay(3000); //Delay de 3 segundos
        client.sendMessage(msg.from, 'Agora eu vou te mandar um audio gravado mas enviado como se fosse fresquinho!!');
        chat.sendStateRecording(); //Simulando audio gravando
        await delay(5000); //Delay de 5 segundos
        const formal1 = MessageMedia.fromFilePath('./audio_base.ogg'); // Arquivo de audio em ogg gravado
        client.sendMessage(msg.from, formal1, {sendAudioAsVoice: true}); // enviando o audio1
        await delay(4000); //Delay de 4 segundos
        client.sendMessage(msg.from, 'Agora quero te mandar uma imagem');
        await delay(3000); //Delay de 3 segundos
        const img1 = MessageMedia.fromFilePath('./imagem_base.png'); // arquivo em imagem
        client.sendMessage(msg.from, img1, {caption: 'Olha que legal'}); //Enviando a imagem
        await delay(3000); //Delay de 3 segundos
        client.sendMessage(msg.from, 'Prontinho! Agora use a sua criatividade para criar sequencias de respostas com audios, bot√µes e imagens. O c√©u √© o limite');
    }

    if (msg.body !== null && msg.body === 'Eu concordo, mto mesmo..') {
        const chat = await msg.getChat();
        chat.sendStateTyping(); //Simulando digita√ß√£o
        await delay(3000); //Delay de 3 segundos
        client.sendMessage(msg.from, 'Voc√™ escolheu a op√ß√£o Eu concordo, mto mesmo.. Isso √© muito bom, pois na pr√°tica voc√™ vai se comunicar com seus clientes exatamente desta maneira.');
        await delay(3000); //Delay de 3 segundos
        client.sendMessage(msg.from, 'Agora eu vou te mandar um audio gravado mas enviado como se fosse fresquinho!!');
        chat.sendStateRecording(); //Simulando audio gravando
        await delay(5000); //Delay de 5 segundos
        const formal1 = MessageMedia.fromFilePath('./audio_base.ogg'); // Arquivo de audio em ogg gravado
        client.sendMessage(msg.from, formal1, {sendAudioAsVoice: true}); // enviando o audio1
        await delay(4000); //Delay de 4 segundos
        client.sendMessage(msg.from, 'Agora quero te mandar uma imagem');
        await delay(3000); //Delay de 3 segundos
        const img1 = MessageMedia.fromFilePath('./imagem_base.png'); // arquivo em imagem
        client.sendMessage(msg.from, img1, {caption: 'Olha que legal'}); //Enviando a imagem
        await delay(3000); //Delay de 3 segundos
        client.sendMessage(msg.from, 'Prontinho! Agora use a sua criatividade para criar sequencias de respostas com audios, bot√µes e imagens. O c√©u √© o limite');
    }
    
});
